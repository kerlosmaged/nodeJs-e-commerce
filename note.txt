section 4 

lesson 19 -> 
 
the data need to set in .env file this is file save the data will change from development mode to production mode -> 
1- port number -> this is maybe change in production mode 

to acess port -> from env file need
1- to install dotenv package
2- used dotenv.config({path:"config.env"})
3- import from process -> process.env.portname 

-------------------------------------------

lesson 20 -> 

http logger 

this is middleware used to logs information about incoming http request and http response 

to make logger need module called -> morgan

what is middleware ? -> mehtod between request and respose can make in it somthings and return response about those things

so morgan is middleware & it's usefull for development mode 

-------------------------------------------

lesson 21 -> 

mongodb atlas 

1- can access your machine ip and this is only will worked with this database 
2- can set access from anywhere and will make any device access it 

cluster is can called it big container have your databases

-------------------------------------------

lesson 23 -> 

some infromation about mongodb

you have an collection on databases this similarly table on sql databases

collection -> table 

document in collection in mongo -> row in sql

field in document in mongo -> column

-------------------------------------------

lesson 25 -> 

project folders structure 

- we used folders structure to make important concpet -> separation of concerns 
- fouces the instractor worked with service folder we worked with controller 


-------------------------------------------

lesson 26 -> 

express middleware explanation

// anything in express is middleware

// in your request response cycle you fire middlewares and every middleware execute for move to another one 
// so you have two things (middleware stack , request response cycle)

// ----------------------------------------------------------

// summary section 4 -> 

// we create those -> 
1- creating server using express and using nodemon to watch changes
2- Environment variables and stop track files in version controle (git) using gitignore
3- logging requests using morgan 
4- overview about mongodb, installing and connect to our app and mongo compass
5- make our first operation in our mongodb
6- project folders structure

// ----------------------------------------------------------

// lesson 28 -> 
category schema and models -> 

this is talk about schema for category models and (the types and constrains for every schema filed will get it from buisniess analysis)
ACL -> access controle layer
slug -> this is used to replace any whitespace with (dash -) ex: category name (a and b) url will be (shopping.com/a-and-b)

timestamps -> this is used to create in database two fileds (created at and updated at)

// lesson 30 -> 

// using async await syntex 

- to handling async errors need to download and used package -> express-async-handler

// lesson 32 ->

// categories pagination

- in production mode or any case data will be big so need to send this data but not only in one time -> this is pagination

- every page have an some of data 

- steps 

1- need to set number of page -> page = 1
2- need to set of limit for the data will return from database -> limit = 5
3- need to set the length will skip it  -> skip = (page - 1) * limit 

- summary section 5 -> 

1- we create (CRUD operation) -> 
    1- create category
    2- read category
    3- update category
    4- delete category

2- we make an pagination -> divide the data into pages 

3- create my requests on postman and orgnaized all of those 


----------------------------------------------------------------------------
problems we fouces it on this project =>
p for problem , s for solve
1 p - the databse created with name (test) this is created because we don't entered the datbase name 
1 s - write after .net/ datbase name -> .net/datbase_name 
----
2 p - when need to get user by id fouce on the id length because this is maybe will make bug in app
2 s - used mongoose.validate